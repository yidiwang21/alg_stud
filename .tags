!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
FALSE	divide_conquer/eight_queens.c	8;"	d	file:
Init	divide_conquer/eight_queens.c	/^void Init(int QUEEN_NUM) {$/;"	f
NQueens	divide_conquer/eight_queens.c	/^void NQueens(int row, const int QUEEN_NUM) {$/;"	f
TRUE	divide_conquer/eight_queens.c	7;"	d	file:
check	divide_conquer/test.c	/^int check(int n) \/* 检查当前列能否放置皇后 *\/$/;"	f
chessboard	divide_conquer/eight_queens.c	/^int *chessboard = NULL;$/;"	v
cnt	divide_conquer/eight_queens.c	/^int cnt = 0;$/;"	v
cnt	divide_conquer/hanno.c	/^int cnt = 0;$/;"	v
factorial	divide_conquer/factorial.c	/^int factorial(int i) {$/;"	f
fibonacci	divide_conquer/fibonacci.c	/^int fibonacci(int i) {$/;"	f
isValid	divide_conquer/eight_queens.c	/^bool isValid(int row, int col) {$/;"	f
main	divide_conquer/eight_queens.c	/^int main(int argc, char const *argv[]) {$/;"	f
main	divide_conquer/factorial.c	/^int main(int argc, char const *argv[]) {$/;"	f
main	divide_conquer/fibonacci.c	/^int main(int argc, char const *argv[]) {$/;"	f
main	divide_conquer/hanno.c	/^int main(int argc, char const *argv[]) {$/;"	f
main	divide_conquer/reverse_order.c	/^int main(int argc, char const *argv[]) {$/;"	f
main	divide_conquer/test.c	/^int main()$/;"	f
max	divide_conquer/test.c	4;"	d	file:
move	divide_conquer/hanno.c	/^void move(int n, char x, char y, char z) {$/;"	f
placeQueen	divide_conquer/eight_queens.c	/^void placeQueen(int row, int col) {$/;"	f
printChessboard	divide_conquer/eight_queens.c	/^void printChessboard(const int QUEEN_NUM) {$/;"	f
put	divide_conquer/test.c	/^void put(int n) \/* 回溯尝试皇后位置,n为横坐标 *\/$/;"	f
queen	divide_conquer/test.c	/^int queen[max], sum=0; \/* max为棋盘最大坐标 *\/$/;"	v
reverse_order	divide_conquer/reverse_order.c	/^char * reverse_order(char *str) {$/;"	f
show	divide_conquer/test.c	/^void show() \/* 输出所有皇后的坐标 *\/$/;"	f
sum	divide_conquer/test.c	/^int queen[max], sum=0; \/* max为棋盘最大坐标 *\/$/;"	v
